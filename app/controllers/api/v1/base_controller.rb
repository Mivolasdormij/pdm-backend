# frozen_string_literal: true

module Api
  module V1
    class BaseController < ApiController
      def process_message
        # identify provider based on the token
        provider = ProviderApplication.find_by(application_id: doorkeeper_token.application_id).provider

        bundle_json = request.body.read
        # "Fix" encoding errors that would prevent FHIR::Json.from_json from working.
        # JSON generated by HealthKit can contain any valid character, and the Apple JSON
        # serializer does not escape them. (Nor should it need to: they're valid characters.)
        # However, this breaks FHIR::Json.from_json, which expects the only characters to be
        # ASCII characters. So this "fixes" that by parsing the JSON and then reencoding as
        # the Ruby JSON encoder escapes all JSON characters outside the 7-bit ASCII range.
        bundle_json = JSON.dump(JSON.parse(bundle_json))
        bundle = FHIR::Json.from_json(bundle_json)

        profile_id = find_profile_id(bundle)
        profile = Profile.find(profile_id)

        dr = DataReceipt.new(profile: profile,
                             provider: provider,
                             data: bundle_json,
                             data_type: 'fhir_bundle_edr')
        dr.save!

        # run the sync job asynchronously, so the request returns quickly
        # set fetch = false, so that it doesn't fetch, it only processes the things we added
        SyncProfileJob.perform_later(profile, false)

        response = build_response(bundle)

        render json: response.to_json, status: :ok
      end

      private

      def find_profile_id(bundle)
        params = bundle.entry.find { |e| e.resource.resourceType == 'Parameters' }.resource
        params.parameter.find { |p| p.name == 'health_data_manager_profile_id' }.value
      end

      def build_response(bundle)
        original_message = bundle.entry[0].resource

        message_header = { 'resourceType' => 'MessageHeader',
                           'timestamp' => Time.now.iso8601,
                           'event' => { 'system' => 'urn:health_data_manager', 'code' => 'EDR', 'display' => 'Encounter Data Receipt' },
                           'source' => { 'name' => 'Rosie', 'endpoint' => 'urn:health_data_manager' },
                           'response' => { 'identifier' => original_message.id, 'code' => 'ok' } }

        FHIR::Bundle.new('type' => 'message',
                         'entry' => [{ 'resource' => message_header }])
      end
    end
  end
end
